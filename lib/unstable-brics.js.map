{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/unstable-brics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\n\n############################################################################################################\n#\n#===========================================================================================================\nUNSTABLE_BRICS =\n  \n\n  #===========================================================================================================\n  ### NOTE Future Single-File Module ###\n  require_next_free_filename: ->\n    cfg =\n      max_attempts:   9999\n      prefix:         '~.'\n      suffix:         '.bricabrac-cache'\n    cache_filename_re = ///\n      ^\n      (?: #{RegExp.escape cfg.prefix} )\n      (?<first>.*)\n      \\.\n      (?<nr>[0-9]{4})\n      (?: #{RegExp.escape cfg.suffix} )\n      $\n      ///v\n    # cache_suffix_re = ///\n    #   (?: #{RegExp.escape cfg.suffix} )\n    #   $\n    #   ///v\n    rpr               = ( x ) ->\n      return \"'#{x.replace /'/g, \"\\\\'\" if ( typeof x ) is 'string'}'\"\n      return \"#{x}\"\n    errors =\n      TMP_exhaustion_error: class TMP_exhaustion_error extends Error\n      TMP_validation_error: class TMP_validation_error extends Error\n    FS            = require 'node:fs'\n    PATH          = require 'node:path'\n    #.......................................................................................................\n    exists = ( path ) ->\n      try FS.statSync path catch error then return false\n      return true\n    #.......................................................................................................\n    get_next_filename = ( path ) ->\n      ### TAINT use proper type checking ###\n      throw new errors.TMP_validation_error \"Ω___9 expected a text, got #{rpr path}\" unless ( typeof path ) is 'string'\n      throw new errors.TMP_validation_error \"Ω__10 expected a nonempty text, got #{rpr path}\" unless path.length > 0\n      dirname  = PATH.dirname path\n      basename = PATH.basename path\n      unless ( match = basename.match cache_filename_re )?\n        return PATH.join dirname, \"#{cfg.prefix}#{basename}.0001#{cfg.suffix}\"\n      { first, nr,  } = match.groups\n      nr              = \"#{( parseInt nr, 10 ) + 1}\".padStart 4, '0'\n      path            = first\n      return PATH.join dirname, \"#{cfg.prefix}#{first}.#{nr}#{cfg.suffix}\"\n    #.......................................................................................................\n    get_next_free_filename = ( path ) ->\n      R             = path\n      failure_count = -1\n      #.....................................................................................................\n      loop\n        #...................................................................................................\n        failure_count++\n        if failure_count > cfg.max_attempts\n          throw new errors.TMP_exhaustion_error \"Ω__11 too many (#{failure_count}) attempts; path #{rpr R} exists\"\n        #...................................................................................................\n        R = get_next_filename R\n        break unless exists R\n      return R\n    #.......................................................................................................\n    # swap_suffix = ( path, suffix ) -> path.replace cache_suffix_re, suffix\n    #.......................................................................................................\n    return exports = { get_next_free_filename, get_next_filename, exists, cache_filename_re, errors, }\n\n#===========================================================================================================\nObject.assign module.exports, UNSTABLE_BRICS\n\n"
  ]
}